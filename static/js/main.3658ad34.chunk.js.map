{"version":3,"sources":["Helpers/Contexts.js","components/MainMenu.js","Helpers/QuestionBank.js","components/Quiz.js","components/EndScreen.js","App.js","reportWebVitals.js","index.js"],"names":["QuizContext","createContext","MainMenu","useContext","setGameState","gameState","className","onClick","Questions","prompt","optionA","optionB","optionC","optionD","answer","Quiz","score","setScore","useState","currQuestion","setCurrQuestion","optionChosen","setOptionChosen","length","EndScreen","App","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iJAEaA,G,KAAcC,2B,OCeZC,MAbf,WACG,MAAiCC,qBAAWH,GAA3BI,GAAjB,EAAMC,UAAN,EAAiBD,cAChB,OACI,qBAAKE,UAAY,OAAjB,SACI,wBAAQC,QAAU,WAAOH,EAAa,SAAtC,2BCRCI,EAAY,CACrB,CACIC,OAAQ,eACRC,QAAS,KACTC,QAAS,KACTC,QAAS,IACTC,QAAS,IACTC,OAAQ,KAEZ,CACIL,OAAQ,iCACRC,QAAS,UACTC,QAAS,SACTC,QAAS,SACTC,QAAS,YACTC,OAAQ,KAEZ,CACIL,OAAQ,qBACRC,QAAS,QACTC,QAAS,YACTC,QAAS,cACTC,QAAS,eACTC,OAAQ,MCyBDC,MA5Cf,WAEI,MAAyCZ,qBAAWH,GAA7CgB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SAAUb,EAAxB,EAAwBA,aAGxB,EAAwCc,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAiBA,OACI,sBAAKhB,UAAU,OAAf,UACI,6BAAKE,EAAUW,GAAcV,SAC7B,sBAAKH,UAAU,UAAf,UACI,wBAAQC,QAAS,kBAAMe,EAAgB,MAAvC,SAA8Cd,EAAUW,GAAcT,UACtE,wBAAQH,QAAS,kBAAMe,EAAgB,MAAvC,SAA8Cd,EAAUW,GAAcR,UACtE,wBAAQJ,QAAS,kBAAMe,EAAgB,MAAvC,SAA8Cd,EAAUW,GAAcP,UACtE,wBAAQL,QAAS,kBAAMe,EAAgB,MAAvC,SAA8Cd,EAAUW,GAAcN,aAGzEM,GAAgBX,EAAUe,OAAS,EACpC,wBAAQhB,QAlBG,WACXC,EAAUW,GAAcL,QAAUO,GACnCJ,EAASD,EAAQ,GAEpBZ,EAAa,cAcT,2BAGA,wBAAQG,QA7BK,WACbC,EAAUW,GAAcL,QAAUO,GACnCJ,EAASD,EAAQ,GAEpBI,EAAgBD,EAAa,IAyBzB,+BCpBGK,MAhBf,WACI,MAAyCrB,qBAAWH,GAA7CgB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SAAUb,EAAxB,EAAwBA,aAMxB,OACI,sBAAKE,UAAY,YAAjB,UACI,+CACA,mCAAMU,EAAN,MAAgBR,EAAUe,OAA1B,OACA,wBAAQhB,QARI,WAChBU,EAAS,GACTb,EAAa,SAMT,8BCQGqB,MAhBf,WACA,MAAkCP,mBAAS,QAA3C,mBAAOb,EAAP,KAAkBD,EAAlB,KACA,EAA0Bc,mBAAS,GAAnC,mBAAOF,EAAP,KAAcC,EAAd,KAEE,OACE,sBAAKX,UAAU,MAAf,UACA,0CACA,eAACN,EAAY0B,SAAb,CAAsBC,MAAS,CAACtB,YAAWD,eAAcY,QAAOC,YAAhE,UACe,SAAdZ,GAAwB,cAAC,EAAD,IACV,SAAdA,GAAwB,cAAC,EAAD,IACV,cAAdA,GAA6B,cAAC,EAAD,WCNnBuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3658ad34.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nexport const QuizContext = createContext();","import React, {useContext} from 'react'\r\nimport {QuizContext} from \"../Helpers/Contexts\";\r\nimport \"../App.css\";\r\n\r\nfunction MainMenu() {\r\n   const{gameState, setGameState} = useContext(QuizContext);\r\n    return (\r\n        <div className = \"Menu\">\r\n            <button onClick ={() => {setGameState(\"quiz\")\r\n        }}\r\n        >\r\n            Start Quiz\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainMenu\r\n","export const Questions = [\r\n    {\r\n        prompt: \"What is 1+3?\",\r\n        optionA: \"24\",\r\n        optionB: \"21\",\r\n        optionC: \"4\",\r\n        optionD: \"2\",\r\n        answer: \"C\"\r\n    },\r\n    {\r\n        prompt: \"Which is a Streaming Platform?\",\r\n        optionA: \"Twitter\",\r\n        optionB: \"Twitch\",\r\n        optionC: \"Google\",\r\n        optionD: \"Robinhood\",\r\n        answer: \"B\"  \r\n    },\r\n    {\r\n        prompt: \"Best cricket team?\",\r\n        optionA: \"India\",\r\n        optionB: \"Australia\",\r\n        optionC: \"New Zealand\",\r\n        optionD: \"South Africa\",\r\n        answer: \"A\",   \r\n    },\r\n];","import React, {useState, useContext} from 'react'\r\nimport {QuizContext} from \"../Helpers/Contexts\";\r\nimport {Questions} from \"../Helpers/QuestionBank\";\r\n\r\nfunction Quiz() {\r\n\r\n    const{ score, setScore, setGameState } = useContext(QuizContext);\r\n\r\n\r\n    const [currQuestion, setCurrQuestion] = useState(0);\r\n    const [optionChosen, setOptionChosen] = useState(\"\");\r\n\r\n    const nextQuestion = () => {\r\n        if (Questions[currQuestion].answer == optionChosen) {\r\n           setScore(score + 1);\r\n        }\r\n        setCurrQuestion(currQuestion+1);\r\n\r\n    };\r\n\r\n    const finishQuiz = () => {\r\n        if (Questions[currQuestion].answer == optionChosen) {\r\n           setScore(score + 1);\r\n        }\r\n        setGameState(\"endScreen\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"Quiz\">\r\n            <h1>{Questions[currQuestion].prompt}</h1>\r\n            <div className=\"options\">\r\n                <button onClick={() => setOptionChosen(\"A\")}>{Questions[currQuestion].optionA}</button>\r\n                <button onClick={() => setOptionChosen(\"B\")}>{Questions[currQuestion].optionB}</button>\r\n                <button onClick={() => setOptionChosen(\"C\")}>{Questions[currQuestion].optionC}</button>\r\n                <button onClick={() => setOptionChosen(\"D\")}>{Questions[currQuestion].optionD}</button>\r\n            </div>\r\n\r\n            {currQuestion == Questions.length - 1 ? (\r\n            <button onClick={finishQuiz}> Finish Quiz </button>\r\n            ) : (\r\n            \r\n            <button onClick={nextQuestion}>Next Question</button>\r\n            )}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Quiz;\r\n\r\n","import React, {useContext} from 'react'\r\nimport {QuizContext} from \"../Helpers/Contexts\";\r\nimport { Questions } from '../Helpers/QuestionBank';\r\nimport \"../App.css\";\r\n\r\nfunction EndScreen() {\r\n    const{ score, setScore, setGameState } = useContext(QuizContext);\r\n\r\n    const restartQuiz = () =>{\r\n        setScore(0);\r\n        setGameState(\"menu\");\r\n    };\r\n    return (\r\n        <div className = \"EndScreen\">\r\n            <h1>Quiz finished</h1>\r\n            <h3> {score} / {Questions.length} </h3>\r\n            <button onClick={restartQuiz}>Restart Quiz</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EndScreen\r\n","import './App.css';\nimport React, {useState, useContext} from 'react';\nimport MainMenu from \"./components/MainMenu\";\nimport Quiz from \"./components/Quiz\";\nimport EndScreen from \"./components/EndScreen\";\n\nimport {QuizContext} from \"./Helpers/Contexts\";\n\nfunction App() {\nconst [gameState, setGameState] = useState(\"menu\");\nconst [score, setScore] = useState(0)\n\n  return (\n    <div className=\"App\">\n    <h1>Quiz App</h1>\n    <QuizContext.Provider value = {{gameState, setGameState, score, setScore}}> \n    {gameState === \"menu\" && <MainMenu />}\n    {gameState === \"quiz\" && <Quiz />}\n    {gameState === \"endScreen\" && <EndScreen />}\n    </QuizContext.Provider> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}